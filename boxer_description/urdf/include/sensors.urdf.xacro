<?xml version="1.0" ?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <!-- Internal Realsense D435 (managed by the Boxer's internal ROS2 API) -->
  <link name="front_realsense_mount_link" />
  <joint name="front_realsense_mount_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="front_realsense_mount_link" />
    <origin xyz="0.3524 0 0.0422" rpy="0 -0.257610597594 0" />
  </joint>
  <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro" />
  <xacro:sensor_d435 parent="front_realsense_mount_link" name="realsense_front_camera" use_nominal_extrinsics="true">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:sensor_d435>

  <!--
    The D435 doesn't natively provide simulation data, so include the kinect plugin to make the sensor work
    Note that the realsense on the Boxer via the Otto API only publishes the depth image, not pointcloud data

    The gazebo kinect plugin aligns the depth data with the Z axis, with X=left and Y=up
    ROS expects the depth data along the X axis, with Y=left and Z=up
    This link only exists to give the gazebo plugin the correctly-oriented frame
  -->
  <link name="realsense_front_camera_gazebo_link" />
  <joint name="realsense_front_camera_gazebo_joint" type="fixed">
    <parent link="realsense_front_camera_link"/>
    <child link="realsense_front_camera_gazebo_link"/>
    <origin xyz="0.0 0 0" rpy="-1.5707963267948966 0 -1.5707963267948966"/>
  </joint>
  <gazebo reference="realsense_front_camera_link">
    <material>Gazebo/Black</material>
    <turnGravityOff>true</turnGravityOff>
    <sensor type="depth" name="realsense_front_camera">
      <update_rate>30</update_rate>
      <camera>
        <!-- 75x65 degree FOV for the depth sensor -->
        <horizontal_fov>1.5184351666666667</horizontal_fov>
        <vertical_fov>1.0122901111111111</vertical_fov>

        <image>
          <width>640</width>
          <height>480</height>
          <format>RGB8</format>
        </image>
        <clip>
          <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
          <near>0.01</near>
          <far>50.0</far>
        </clip>
      </camera>
      <plugin name="kinect_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>realsense</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>realsense_front_camera_gazebo_link</frameName>
        <pointCloudCutoff>0.105</pointCloudCutoff>
        <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Front safety sensor -->
  <link name="front_laser">
    <visual>
      <geometry>
        <mesh filename="package://boxer_description/meshes/hokuyo_uam_05lp.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <material name="Boxer_Black" />
    </visual>
  </link>
  <joint name="front_laser_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="front_laser" />
    <origin xyz="0.3062 0 0.1614" rpy="0 0 0" />
  </joint>
  <gazebo reference="front_laser">
    <material>Gazebo/Black</material>
    <turnGravityOff>true</turnGravityOff>
    <sensor type="ray" name="front_laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>33</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619449019</min_angle>
            <max_angle>2.35619449019</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>20</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
        <topicName>front/scan</topicName>
        <frameName>front_laser</frameName>
        <robotNamespace>/</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>



  <!-- Internal rear safety laser -->
  <link name="rear_sensor">
    <visual>
      <geometry>
        <mesh filename="package://boxer_description/meshes/rear_sensor.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 ${pi}" />
      <material name="Boxer_Black" />
    </visual>
  </link>
  <joint name="rear_sensor_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="rear_sensor" />
    <origin xyz="-0.3404 0.0241 0.0779" rpy="0 -0.0698131700798 ${pi}" />
  </joint>
  <!-- TODO look up the actual specs for this sensor; range, FoV, samples is a complete guess right now -->
  <gazebo reference="rear_sensor">
    <material>Gazebo/Black</material>
    <turnGravityOff>true</turnGravityOff>
    <sensor type="ray" name="rear_laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>33</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>90</samples>
            <resolution>1</resolution>
            <min_angle>0.785398163397</min_angle>
            <max_angle>-0.785398163397</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
        <topicName>rear/scan</topicName>
        <frameName>rear_sensor</frameName>
        <robotNamespace>/</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Cart sensor -->
  <link name="cart_sensor"/>
  <joint name="cart_sensor_joint" type="fixed">
    <parent link="top_plate_link" />
    <child link="cart_sensor" />
    <origin xyz="-0.150 -0.114 0" rpy="0 0 0" />
  </joint>

  <!-- Internal IMU -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link" />
    <child link="imu_link"/>
    <origin rpy="0 0 -0.78539816339744828" xyz="0.191959 -0.086412 0.18455965360"/>
  </joint>
  <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>/imu/module0/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
</robot>
